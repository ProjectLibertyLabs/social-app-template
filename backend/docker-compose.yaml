x-common-environment: &common-environment
  FREQUENCY_URL: 'ws://frequency:9944'
  FREQUENCY_HTTP_URL: 'http://localhost:9944'
  REDIS_URL: 'redis://redis:6379'
  PROVIDER_ID: 1
  PROVIDER_ACCOUNT_SEED_PHRASE: '//Alice'
  WEBHOOK_BASE_URL: 'http://social-app-template-backend:3001/webhooks'
  WEBHOOK_FAILURE_THRESHOLD: 3
  WEBHOOK_RETRY_INTERVAL_SECONDS: 10
  HEALTH_CHECK_MAX_RETRIES: 4
  HEALTH_CHECK_MAX_RETRY_INTERVAL_SECONDS: 10
  HEALTH_CHECK_SUCCESS_THRESHOLD: 10
  CAPACITY_LIMIT: '{"type":"percentage", "value":80}'
  SIWF_URL: 'https://projectlibertylabs.github.io/siwf/v1/ui'
  SIWF_DOMAIN: 'localhost'
  IPFS_ENDPOINT: 'http://ipfs:5001'
  IPFS_GATEWAY_URL: 'https://ipfs.io/ipfs/[CID]'
  QUEUE_HIGH_WATER: 1000
  CHAIN_ENVIRONMENT: dev
  DEBUG: false

x-content-publishing-env: &content-publishing-env
  START_PROCESS: api
  FILE_UPLOAD_MAX_SIZE_IN_BYTES: 2000000000
  ASSET_EXPIRATION_INTERVAL_SECONDS: 300
  BATCH_INTERVAL_SECONDS: 12
  BATCH_MAX_COUNT: 1000
  ASSET_UPLOAD_VERIFICATION_DELAY_SECONDS: 5

x-content-watcher-env: &content-watcher-env
  IPFS_BASIC_AUTH_SECRET:
  STARTING_BLOCK: 1
  BLOCKCHAIN_SCAN_INTERVAL_SECONDS: 12
  WEBHOOK_FAILURE_THRESHOLD: 4
  PROVIDER_BASE_URL: 'http://social-app-template-backend:3001/webhooks/content-watcher/announcements'

x-graph-service-env: &graph-service-env
  DEBOUNCE_SECONDS: 10
  GRAPH_ENVIRONMENT_TYPE: Mainnet
  RECONNECTION_SERVICE_REQUIRED: false
  PROVIDER_BASE_URL: 'http://social-app-template-backend:3001/webhooks/graph-service'

x-account-service-env: &account-service-env
  PROVIDER_BASE_URL: 'http://social-app-template-backend:3001/webhooks/account-service'

x-social-app-template-backend: &social-app-template-backend
  ACCOUNT_SERVICE_URL: 'http://account-service-api:3000'
  CONTENT_PUBLISHER_URL: 'http://content-publishing-service-api:3000'
  CONTENT_WATCHER_URL: 'http://content-watcher-service:3000'
  GRAPH_SERVICE_URL: 'http://graph-service-api:3000'
  IPFS_UA_GATEWAY_URL: 'http://localhost:8080'
  NODE_ENV: development

services:
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - social-app-backend
    volumes:
      - redis_data:/data/redis

  frequency:
    image: dsnp/instant-seal-node-with-deployed-schemas:latest
    # We need to specify the platform because it's the only image
    # built by Frequency at the moment, and auto-pull won't work otherwise
    platform: linux/amd64
    # Uncomment SEALING_MODE and SEALING_INTERVAL if you want to use interval sealing.
    # Other options you may want to add depending on your test scenario.
    environment:
      - SEALING_MODE=interval
      - SEALING_INTERVAL=12
    #   - CREATE_EMPTY_BLOCKS=true
    # The 'command' may contain additional CLI options to the Frequency node,
    # such as:
    # --state-pruning=archive
    command: --offchain-worker=always --enable-offchain-indexing=true
    ports:
      - 9944:9944
    networks:
      - social-app-backend
    volumes:
      - chainstorage:/data

  ipfs:
    image: ipfs/kubo:latest
    ports:
      - 4001:4001
      - 5001:5001
      - 8080:8080
    networks:
      - social-app-backend
    volumes:
      - ipfs_data:/data/ipfs

  content-publishing-service-api:
    image: projectlibertylabs/content-publishing-service:latest
    platform: linux/amd64
    environment:
      <<: [*common-environment, *content-publishing-env]
    depends_on:
      - redis
      - frequency
      - ipfs
    networks:
      - social-app-backend

  content-publishing-service-worker:
    image: projectlibertylabs/content-publishing-service:latest
    platform: linux/amd64
    environment:
      <<: [*common-environment, *content-publishing-env]
      START_PROCESS: worker
    depends_on:
      - redis
      - frequency
      - ipfs
    networks:
      - social-app-backend

  content-watcher-service:
    image: projectlibertylabs/content-watcher-service:latest
    platform: linux/amd64
    environment:
      <<: [*common-environment, *content-watcher-env]
    depends_on:
      - redis
      - frequency
      - ipfs
    networks:
      - social-app-backend

  graph-service-api:
    image: projectlibertylabs/graph-service:latest
    platform: linux/amd64
    environment:
      <<: [*common-environment, *graph-service-env]
      START_PROCESS: api
    depends_on:
      - redis
      - frequency
    networks:
      - social-app-backend

  graph-service-worker:
    image: projectlibertylabs/graph-service:latest
    platform: linux/amd64
    environment:
      <<: [*common-environment, *graph-service-env]
      START_PROCESS: worker
    depends_on:
      - redis
      - frequency
    networks:
      - social-app-backend

  account-service-api:
    image: projectlibertylabs/account-service:latest
    platform: linux/amd64
    command: api
    environment:
      <<: [*common-environment, *account-service-env]
    depends_on:
      - redis
      - frequency
    networks:
      - social-app-backend

  account-service-worker:
    image: projectlibertylabs/account-service:latest
    platform: linux/amd64
    command: worker
    environment:
      <<: [*common-environment, *account-service-env]
    depends_on:
      - redis
      - frequency
    networks:
      - social-app-backend

  social-app-template-backend:
    pull_policy: never
    image: social-app-backend
    build:
      context: .
      dockerfile: dev.Dockerfile
      tags:
        - social-app-backend:latest
    ports:
      - 3001:3000
      - 3002:3001

    environment:
      <<: [*common-environment, *social-app-template-backend]
      IPFS_GATEWAY_URL: 'http://ipfs:8080'
    volumes:
      - .:/app
      - node_cache:/app/node_modules
    networks:
      - social-app-backend
    depends_on:
      - frequency
      - ipfs
      - content-publishing-service-api
      - content-publishing-service-worker
      - account-service-api
      - account-service-worker
      - graph-service-api
      - graph-service-worker
    profiles:
      - full
volumes:
  ipfs_data:
  chainstorage:
    external: false
  node_cache:
  redis_data:

networks:
  social-app-backend:
